type Query {
  me: User!
  users: [User!]!
}

type Mutation {
  login(data: LoginUserInput!): AuthPayload!
}

type Subscription {
  user: UserSubscriptionPayload!
}

input LoginUserInput {
  email: String!
  password: String!
}

type AuthPayload {
  token: String!
  user: User!
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

type User {
  id: ID!
  name: String!
  email: String!
  password: String!
  createdAt: String!
  updatedAt: String!
}
